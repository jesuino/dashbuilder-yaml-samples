properties:
  dataIndexUrl: http://localhost:8180

  # seconds
  refresh: 10

  # charts size
  chartsWidth: 100%
  chartsHeight: 280px

  # cards size (change the template for width)
  cardsHeight: 80

  # cards template
  cardTemplate: >-
    >-
                          <div id="${this}" class="card-pf card-pf-accented card-pf-aggregate-status" style="background-color: ${bgColor}; width: 95%; height:${height}px;">
                            <h2 style="font-weight: 600;" id="${this}Value">${value}</h2>
                            <p style="font-weight: 400" id="${this}Title">${title}</p>
                          </div>
datasets:
  - uuid: nodes
    expression: >-
      $reduce($map($.data.ProcessInstances, function($p){
                $map($p.nodes, function($n) {
                    [$p.processId, $n.name, $n.exit ? $toMillis($n.exit) - $toMillis($n.enter) : -1]
                })
      }), $append)
    url: ${dataIndexUrl}/graphql/?query=%7B%0A%20%20ProcessInstances%20%7B%0A%20%20%20%20processId%0A%20%20%20%20nodes%20%7B%20%20%20%20%20%20%0A%20%20%20%20%20%20nodeId%0A%20%20%20%20%20%20name%0A%20%20%20%20%20%20enter%0A%20%20%20%20%20%20exit%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A
    columns:
      - id: processId
        type: label
      - id: name
        type: label
      - id: time
        type: number
  - uuid: processInstances
    expression: >-
      $.data.ProcessInstances.[ id, processId, processName, serviceUrl, state, $fromMillis($toMillis(start)), $fromMillis($toMillis(lastUpdate)), end ? $toMillis(end) - $toMillis(start) : -1, error ? error.message : ""]
    url: ${dataIndexUrl}/graphql/?query=%7B%0A%20%20ProcessInstances%20%7B%0A%20%20%20%20id%0A%20%20%20%20processId%0A%20%20%20%20processName%0A%20%20%20%20serviceUrl%0A%20%20%20%20state%0A%20%20%20%20start%0A%20%20%20%20end%0A%20%20%20%20lastUpdate%0A%20%20%20%20error%20%7B%20%20%20%20%20%20%0A%20%20%20%20%20%20message%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A
    columns:
      - id: id
        type: LABEL
      - id: processId
        type: LABEL
      - id: processName
        type: LABEL
      - id: serviceUrl
        type: LABEL
      - id: state
        type: LABEL
      - id: startDate
        type: DATE
      - id: lastUpdate
        type: DATE
      - id: duration
        type: number
      - id: errorMessage
        type: LABEL
pages:
  - rows:
      - columns:
          - span: "11"
            components:
              - html: "Filter"
                properties:
                  font-weight: bolder
              - properties:
                  width: "150px"
                  margin-bottom: "20px"
                settings:
                  type: SELECTOR
                  general:
                    visible: "true"
                    text: "Filter"
                  filter:
                    enabled: "true"
                    notification: "true"
                  dataSetLookup:
                    uuid: processInstances
                    group:
                      - columnGroup:
                          source: processId
                        groupFunctions:
                          - source: processId
                            column: Workflow
      - properties:
          margin-left: 30px
          text-align: center
        columns:
          - span: "2"
            components:
              - settings:
                  type: METRIC
                  filter:
                    enabled: "true"
                    listening: "true"
                  refresh:
                    interval: "${refresh}"
                  general:
                    title: Workflows
                    visible: "true"
                  html:
                    html: ${cardTemplate}
                  chart:
                    height: "${cardsHeight}"
                  columns:
                    - id: Total
                      pattern: "#"
                  dataSetLookup:
                    uuid: processInstances
                    group:
                      - groupFunctions:
                          - source: Total
                            function: COUNT
          - span: "2"
            properties:
              color: blue
            components:
              - settings:
                  type: METRIC
                  filter:
                    enabled: "true"
                    listening: "true"
                  refresh:
                    interval: "${refresh}"
                  general:
                    title: Completed
                    visible: "true"
                  html:
                    html: ${cardTemplate}
                  chart:
                    height: "${cardsHeight}"
                  columns:
                    - id: Total
                      pattern: "#"
                  dataSetLookup:
                    uuid: processInstances
                    filter:
                      - column: state
                        function: EQUALS_TO
                        args:
                          - COMPLETED
                    group:
                      - groupFunctions:
                          - source: Total
                            function: COUNT
          - span: "2"
            properties:
              color: green
            components:
              - settings:
                  type: METRIC
                  filter:
                    enabled: "true"
                    listening: "true"
                  refresh:
                    interval: "${refresh}"
                  general:
                    title: Active
                    visible: "true"
                  html:
                    html: ${cardTemplate}
                  chart:
                    height: "${cardsHeight}"
                  columns:
                    - id: Total
                      pattern: "#"
                  dataSetLookup:
                    uuid: processInstances
                    filter:
                      - column: state
                        function: EQUALS_TO
                        args:
                          - ACTIVE
                    group:
                      - groupFunctions:
                          - source: Total
                            function: COUNT
          - span: "2"
            properties:
              color: orange
            components:
              - settings:
                  type: METRIC
                  filter:
                    enabled: "true"
                    listening: "true"
                  refresh:
                    interval: "${refresh}"
                  general:
                    title: Pending
                    visible: "true"
                  html:
                    html: ${cardTemplate}
                  chart:
                    height: "${cardsHeight}"
                  columns:
                    - id: Total
                      pattern: "#"
                  dataSetLookup:
                    uuid: processInstances
                    filter:
                      - column: state
                        function: EQUALS_TO
                        args:
                          - PENDING
                    group:
                      - functions:
                          - source: Total
                            function: COUNT
          - span: "2"
            properties:
              color: orange
            components:
              - settings:
                  type: METRIC
                  filter:
                    enabled: "true"
                    listening: "true"
                  refresh:
                    interval: "${refresh}"
                  general:
                    title: Aborted
                    visible: "true"
                  html:
                    html: ${cardTemplate}
                  chart:
                    height: "${cardsHeight}"
                  columns:
                    - id: Total
                      pattern: "#"
                  dataSetLookup:
                    uuid: processInstances
                    filter:
                      - column: state
                        function: EQUALS_TO
                        args:
                          - ABORTED
                    group:
                      - functions:
                          - source: Total
                            function: COUNT
          - span: "2"
            properties:
              color: red
            components:
              - settings:
                  type: METRIC
                  filter:
                    enabled: "true"
                    listening: "true"
                  refresh:
                    interval: "${refresh}"
                  general:
                    title: Error
                    visible: "true"
                  html:
                    html: ${cardTemplate}
                  chart:
                    height: "${cardsHeight}"
                  columns:
                    - id: Total
                      pattern: "#"
                  dataSetLookup:
                    dataSetUuid: processInstances
                    filter:
                      - column: state
                        function: EQUALS_TO
                        args:
                          - ERROR
                    group:
                      - groupFunctions:
                          - source: Total
                            function: COUNT
      - columns:
          - components:
              - html: "<hr />"
      - columns:
          - components:
              - settings:
                  component: echarts
                  echarts:
                    series:
                      type: "bar"
                    title:
                      text: Nodes Execution Time
                    yAxis:
                      name: Time (ms)
                      nameLocation: middle
                      nameGap: "35"
                      nameTextStyle:
                        fontStyle: italic
                  external:
                    width: "${chartsWidth}"
                    height: "${chartsHeight}"
                  filter:
                    enabled: "true"
                    listening: "true"
                  refresh:
                    interval: "${refresh}"
                  dataSetLookup:
                    dataSetUuid: nodes
                    sort:
                      - column: Time (ms)
                        order: DESCENDING
                    group:
                      - columnGroup:
                          source: name
                        functions:
                          - source: name
                          - source: time
                            function: AVERAGE
                            column: Time (ms)

      - columns:
          - span: "6"
            properties:
              background-color: white
            layoutComponents:
              - settings:
                  component: echarts
                  echarts:
                    series:
                      type: "line"
                    title:
                      text: By Start Date
                    option: >-
                      {
                          "toolbox": {
                              "feature": {
                                  "dataZoom": {},
                                  "magicType": {
                                      "type": ["line", "bar"]
                                  }
                              }   
                          }
                          
                          
                      }
                  external:
                    width: "${chartsWidth}"
                    height: "${chartsHeight}"
                  filter:
                    enabled: "true"
                    listening: "true"
                  refresh:
                    interval: "${refresh}"
                  dataSetLookup:
                    uuid: processInstances
                    sort:
                      - column: startDate
                        sortOrder: ASCENDING
                    group:
                      - columnGroup:
                          emptyIntervals: "true"
                          source: startDate
                        groupFunctions:
                          - source: startDate
                          - source: startDate
                            function: COUNT
                            column: Total Started
          - span: "6"
            properties:
              background-color: white
            layoutComponents:
              - settings:
                  component: echarts
                  echarts:
                    series:
                      type: "line"
                    title:
                      text: By Last Update
                    option: >-
                      {
                          "toolbox": {
                              "feature": {
                                  "dataZoom": {},
                                  "magicType": {
                                      "type": ["line", "bar"]
                                  }
                              }   
                          }
                          
                          
                      }
                  external:
                    width: "${chartsWidth}"
                    height: "${chartsHeight}"
                  filter:
                    enabled: "true"
                    listening: "true"
                  refresh:
                    interval: "${refresh}"
                  dataSetLookup:
                    uuid: processInstances
                    sort:
                      - column: lastUpdate
                        sortOrder: ASCENDING
                    group:
                      - columnGroup:
                          emptyIntervals: "true"
                          source: lastUpdate
                        groupFunctions:
                          - source: lastUpdate
                          - source: lastUpdate
                            function: COUNT
                            column: Last Update
